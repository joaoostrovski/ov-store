name: Java CI with Maven and Hibernate

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    env:
      DB_URL: jdbc:mariadb://localhost:3306/ov_store
      DB_USERNAME: root
      DB_PASSWORD: root

    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_DATABASE: ov_store
          MYSQL_USER: root
          MYSQL_PASSWORD: root
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -proot" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Wait for MariaDB to initialize
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h 127.0.0.1 -u root -proot --silent; then
              echo "MariaDB is up!"
              break
            fi
            echo "Waiting for MariaDB..."
            sleep 6
          done

      - name: Install MariaDB client
        run: sudo apt-get install -y mariadb-client

      - name: Confirm MariaDB is running
        run: mysqladmin ping -h 127.0.0.1 -u root -proot

      - name: Run Database Migrations
        run: mvn flyway:migrate

      - name: Set up Environment
        run: echo "Environment variables set."

      - name: Run tests with Maven
        run: mvn test

      - name: Push to main if build and tests pass
        if: github.ref == 'refs/heads/dev'
        run: |
          git config --global user.email "ojcroveda@gmail.com"
          git config --global user.name "jota-br"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git
          git checkout main
          git merge dev
          git push origin main