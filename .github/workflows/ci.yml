name: Java CI with Maven and Hibernate

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    env:
      DB_URL: jdbc:mariadb://127.0.0.1:3306/ov_store
      DB_USERNAME: root
      DB_PASSWORD: root

    services:
      mariadb:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ov_store
        ports:
          - 3306:3306

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: ${{ github.workspace }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Install MariaDB client
        run: sudo apt-get update && sudo apt-get install -y mariadb-client

      - name: Wait for MariaDB to initialize
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -P 3306 -u root -proot --silent; then
              echo "MariaDB is up!"
              break
            fi
            echo "Waiting for MariaDB... ($i/30)"
            sleep 2
          done

      - name: Confirm MariaDB is running
        run: mysqladmin ping -h 127.0.0.1 -P 3306 -u root -proot

      - name: Run Database Migrations
        env:
          DB_URL: ${{ env.DB_URL }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
        run: |
          mvn org.flywaydb:flyway-maven-plugin:8.0.0:migrate \
            -Dflyway.url=$DB_URL \
            -Dflyway.user=$DB_USERNAME \
            -Dflyway.password=$DB_PASSWORD \
#            -Dflyway.locations=filesystem:${{ github.workspace }}/ov-store/src/main/resources/db/migration

      - name: Run tests with Maven
        env:
          DB_URL: ${{ env.DB_URL }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
        run: |
          mvn test \
            -Ddb.url=$DB_URL \
            -Ddb.username=$DB_USERNAME \
            -Ddb.password=$DB_PASSWORD

      - name: Print Working Directory
        run: pwd

      - name: List Files
        run: ls -la

      - name: List Contents of ov-store Directory
        run: ls -la ov-store

      - name: Push to main if build and tests pass
        if: github.ref == 'refs/heads/dev'
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.email "ojcroveda@gmail.com"
          git config --global user.name "jota-br"
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git
          git checkout main
          git merge dev
          git push origin main
